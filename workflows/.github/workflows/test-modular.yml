name: "test apps modular"

on:
  push:
    # branches: main
    paths:
      # - 'programs/x86_64/**'
      - .github/workflows/test-modular.yml

  repository_dispatch:
    types: [check]

  workflow_dispatch:
    inputs:
      reset_stats:
        description: "RESET stats"
        required: true
        default: false
        type: boolean
      retest_excluded:
        description: "TEST excluded"
        required: true
        default: false
        type: boolean
      what_test:
        description: "App names: (space between)"
        required: false
        default: ""
        type: string
      how_many:
        description: "Number of apps: (max 256)"
        required: false
        default: ''
        type: integer
      debug:
        description: "Debug worflow file"
        required: true
        default: false
        type: boolean
      am_branch:
        description: "Choose AM branch to runs on"
        required: true
        default: dev
        type: choice
        options:
        - main
        - dev

  #schedule:
    # - cron: '*/30 6-8 * * *'
    #- cron: '*/30 * * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  actions: write
  contents: write

env:
  REPO: ${{ github.repository_owner }}/AM
  BRANCH: ${{ github.event.inputs.am_branch }}
  TOTEST: 222

jobs:
  show-inputs:
    name: "inputs üìÉ"
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: m-s-abeer/update-gha-summary-with-workflow-inputs@v1

  remotely-triggered:
    name: "triggered üì°"
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: "Remotely triggered"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: "Show payload"
        run: echo ${{ github.event.client_payload.sha }} >> $GITHUB_STEP_SUMMARY

  show-stats:
    name: "stats üìä"
    runs-on: ubuntu-22.04
    outputs:
      all: ${{ steps.count.outputs.all }}
      tested: ${{ steps.stats.outputs.tested }}
      excluded: ${{ steps.stats.outputs.excluded }}
    steps:
      - name: "Run stats"
        run: |
          curl -X POST \
           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}/actions/workflows/1-stats.yml/dispatches \
           -d '{"ref": "main", "inputs": { "param1": "value1" }}'

  generate-matrix:
    name: "matrix üåÄ"
    if: github.event.inputs.reset_stats != 'true'
    needs: show-stats
    runs-on: ubuntu-22.04
    outputs:
      skip: ${{ steps.set-matrix.outputs.skip }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: "Run matrix"
        run: |
          curl -X POST \
           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}/actions/workflows/2-matrix.yml/dispatches \
           -d '{"ref": "main", "inputs": { "param1": "value1" }}'

  run-actions:
    name: "üî®"
    needs: generate-matrix
    runs-on: ubuntu-22.04
    if: ${{ needs.generate-matrix.outputs.skip != 'true' }}
    strategy:
      fail-fast: false
      max-parallel: 23
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    env:
      TIMEOUT: 10
    steps:
      - name: "Run actions"
        run: |
          curl -X POST \
           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}/actions/workflows/3-actions.yml/dispatches \
           -d '{"ref": "main", "inputs": { "param1": "value1" }}'

  check-failed:
    name: "retest ‚ùì"
    needs: run-actions
    runs-on: ubuntu-22.04
    if: (always() && github.event.inputs.reset_stats != 'true' && needs.generate-matrix.outputs.skip != 'true')
    outputs:
      failed: ${{ steps.proces.outputs.failed }}
    steps:
      - name: "Run retest?"
        run: |
          curl -X POST \
           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}/actions/workflows/4-retest.yml/dispatches \
           -d '{"ref": "main", "inputs": { "param1": "value1" }}'

  test-failed:
    name: "retest üî≠"
    needs: check-failed
    runs-on: ubuntu-22.04
    if: needs.check-failed.outputs.failed == 'true'
    steps:
      - name: "Run retest"
        run: |
          curl -X POST \
           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}/actions/workflows/5-retest.yml/dispatches \
           -d '{"ref": "main", "inputs": { "param1": "value1" }}'

  update-results:
    name: "results üéì"
    needs: test-failed
    runs-on: ubuntu-22.04
    if: (always() && github.event.inputs.reset_stats != 'true' && needs.generate-matrix.outputs.skip != 'true')
    outputs:
      failed: ${{ steps.proces.outputs.failed }}
    steps:
      - name: "Run results"
        run: |
          curl -X POST \
           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}/actions/workflows/6-results.yml/dispatches \
           -d '{"ref": "main", "inputs": { "param1": "value1" }}'

  already-tested:
    name: "all üèÅ"
    runs-on: ubuntu-22.04
    needs: generate-matrix
    if: ${{ needs.generate-matrix.outputs.skip == 'true' }}
    steps:
      - name: "Run tested"
        run: |
          curl -X POST \
           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}/actions/workflows/0-tested.yml/dispatches \
           -d '{"ref": "main", "inputs": { "param1": "value1" }}'
